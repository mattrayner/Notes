open(URI.parse("http://google.com"))
URI.parse("http://google.com").open { |io| puts io.read }
uri = URI.parse("http://google.com").open { |io| puts io.read
uri = URI.parse("http://google.com")
url.open { |io| puts io.read }
uri.open { |io| puts io.read }
puts uri.read
Article.first
Article.find()
Article.find(1)
Article
date = Date(20/1/2014)
date = Time('20/1/2014')
Date
Date.new
Date.new(20/1/204
)
Date.new(20/1/2014)
Date.new('20/1/2014')
Date.new.set('20/1/2014')
Time.at '20/1/2014'
Time.local(2014, 1, 30)  
Time.local(2014, 1, 30).strftime('%a, %D %b %Y')
Time.local(2014, 1, 30).strftime('%a, %d %b %Y')
Time.local(2014, 1, 20).strftime('%a, %d %b %Y')
Time.local(2014, 1, 10).strftime('%a, %d %b %Y')
Time.local(2014, 1, 1).strftime('%a, %d %b %Y')
Issue
FactoryGirl.lint
FactoryGirl
FactoryGirl.all
build(:user)
PRoject.create(title: 'title', body: 'body')
Project.create(title: 'title', body: 'body')
Project.all
projects.first.
projects = Project.all
projects.first
images = ProjectGalleryImage.all
images = ProjectGalleryImage.all.first.project
Project.all.gallery_images
Project.all.first.gallery_image
Project.all.first.gallery_images
Skill.all
c = CaseStudy.new
c.title = "title"
c.body = "body"
s.title = "Ruby"
s.level = 99.3
s.case_studies << c
c.skills
s.case_studies
Skill.new
Skill.title = 'title'
s = Skill.new
s.title = 'title'
s.level = -1
s.save
s.save!
CaseStudyGalleryImage.new
i = CaseStudyGalleryImage.new
i.save
i.save!
CaseStudt.new
cs = CaseStudy.new
csbrew install imagema
FitBitStat.all
FitBitStats.all.limit(20).offset(1)
FitBitStats.all
FitBitStats.all.limit(20).order_by(&created_at).offset(1)
FitBitStats.all.limit(20).order_by(&:created_at).offset(1)
FitBitStats.all.limit(20).sort_by(&:created_at).offset(1)
FitBitStats.all.limit(20)
FitBitStats.last(20)
FitBitStats.last(20).offset(1)
FitBitStats.limit(20).offset(1)
FitBitStats.order(created_at: desc).limit(20).offset(1)
FitBitStats.order(created_at: :desc).limit(20).offset(1)
''.present?
''.size
'123'.size > 0
''.size > 0
nil.defined?
nil.present?
nil.blank?
''.empty?
''.blank?
''.strip.size == 0
@user = nil
defined? @user
defined? user
@user.all?
all?
all?(obj)
all?(nil)
['a']+['b']
(['a']+['b'])
(['a']+['b']).flatten
[]+nil
exit
